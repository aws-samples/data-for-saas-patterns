// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Mappings": {
    "LatestNodeRuntimeMap": {
      "af-south-1": {
        "value": "nodejs20.x",
      },
      "ap-east-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-1": {
        "value": "nodejs20.x",
      },
      "ap-northeast-2": {
        "value": "nodejs20.x",
      },
      "ap-northeast-3": {
        "value": "nodejs20.x",
      },
      "ap-south-1": {
        "value": "nodejs20.x",
      },
      "ap-south-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-1": {
        "value": "nodejs20.x",
      },
      "ap-southeast-2": {
        "value": "nodejs20.x",
      },
      "ap-southeast-3": {
        "value": "nodejs20.x",
      },
      "ap-southeast-4": {
        "value": "nodejs20.x",
      },
      "ap-southeast-5": {
        "value": "nodejs20.x",
      },
      "ap-southeast-7": {
        "value": "nodejs20.x",
      },
      "ca-central-1": {
        "value": "nodejs20.x",
      },
      "ca-west-1": {
        "value": "nodejs20.x",
      },
      "cn-north-1": {
        "value": "nodejs18.x",
      },
      "cn-northwest-1": {
        "value": "nodejs18.x",
      },
      "eu-central-1": {
        "value": "nodejs20.x",
      },
      "eu-central-2": {
        "value": "nodejs20.x",
      },
      "eu-isoe-west-1": {
        "value": "nodejs18.x",
      },
      "eu-north-1": {
        "value": "nodejs20.x",
      },
      "eu-south-1": {
        "value": "nodejs20.x",
      },
      "eu-south-2": {
        "value": "nodejs20.x",
      },
      "eu-west-1": {
        "value": "nodejs20.x",
      },
      "eu-west-2": {
        "value": "nodejs20.x",
      },
      "eu-west-3": {
        "value": "nodejs20.x",
      },
      "il-central-1": {
        "value": "nodejs20.x",
      },
      "me-central-1": {
        "value": "nodejs20.x",
      },
      "me-south-1": {
        "value": "nodejs20.x",
      },
      "mx-central-1": {
        "value": "nodejs20.x",
      },
      "sa-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-1": {
        "value": "nodejs20.x",
      },
      "us-east-2": {
        "value": "nodejs20.x",
      },
      "us-gov-east-1": {
        "value": "nodejs18.x",
      },
      "us-gov-west-1": {
        "value": "nodejs18.x",
      },
      "us-iso-east-1": {
        "value": "nodejs18.x",
      },
      "us-iso-west-1": {
        "value": "nodejs18.x",
      },
      "us-isob-east-1": {
        "value": "nodejs18.x",
      },
      "us-west-1": {
        "value": "nodejs20.x",
      },
      "us-west-2": {
        "value": "nodejs20.x",
      },
    },
  },
  "Outputs": {
    "ApiEndpoint1541504C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiCD79AAA0",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiDeploymentStageprod95EFE650",
            },
            "/",
          ],
        ],
      },
    },
    "ApiUrl": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiCD79AAA0",
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region",
            },
            ".",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "ApiDeploymentStageprod95EFE650",
            },
            "/",
          ],
        ],
      },
    },
    "ClientId": {
      "Value": {
        "Ref": "IdentityUserPoolUserPoolClient1035B963",
      },
    },
    "OidcProvider": {
      "Value": {
        "Fn::Select": [
          1,
          {
            "Fn::Split": [
              ":oidc-provider/",
              {
                "Ref": "IdentityMyOidcProvider7F02079C",
              },
            ],
          },
        ],
      },
    },
    "UserPoolId": {
      "Value": {
        "Ref": "IdentityUserPool96FE3B9B",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "ApiANY29CC0E6B": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "ApiAuthorizer787544C1",
        },
        "HttpMethod": "ANY",
        "Integration": {
          "IntegrationHttpMethod": "GET",
          "Type": "HTTP_PROXY",
          "Uri": "https://github.com/aws-samples/data-for-saas-patterns",
        },
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiCD79AAA0",
            "RootResourceId",
          ],
        },
        "RestApiId": {
          "Ref": "ApiCD79AAA0",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiAccount6C17A443": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "ApiCD79AAA0",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiCloudWatchRoleCCA56614",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiAuthorizer787544C1": {
      "Properties": {
        "AuthorizerResultTtlInSeconds": 300,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "ApiAuthorizerFn0AD8B47E",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "ApiAuthorizerFn0AD8B47E",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "ApiAuthorizerFn0AD8B47E",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.Authorization",
        "Name": "testApiAuthorizer1FF05C25",
        "RestApiId": {
          "Ref": "ApiCD79AAA0",
        },
        "Type": "REQUEST",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "ApiAuthorizerFn0AD8B47E": {
      "DependsOn": [
        "ApiAuthorizerFnServiceRole1C6A7C39",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "c216a23c377b518c9770a510e7a4a47d58e54517cfb7c5eb92ca6ce52220d98a.zip",
        },
        "Environment": {
          "Variables": {
            "ASSUMED_ROLE": {
              "Fn::GetAtt": [
                "Role1ABCC5F0",
                "Arn",
              ],
            },
            "CLIENT_ID": {
              "Ref": "IdentityUserPoolUserPoolClient1035B963",
            },
            "USERPOOL_ID": {
              "Ref": "IdentityUserPool96FE3B9B",
            },
          },
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "ApiLogGroup1717FE17",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "ApiAuthorizerFnServiceRole1C6A7C39",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiAuthorizerFnServiceRole1C6A7C39": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiAuthorizerFntestApiAuthorizer1FF05C25Permissions19B273EE": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ApiAuthorizerFn0AD8B47E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region",
              },
              ":",
              {
                "Ref": "AWS::AccountId",
              },
              ":",
              {
                "Ref": "ApiCD79AAA0",
              },
              "/authorizers/",
              {
                "Ref": "ApiAuthorizer787544C1",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiCD79AAA0": {
      "Properties": {
        "ApiKeySourceType": "AUTHORIZER",
        "Name": "TenantIsolationPatterns-Basic",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiCloudWatchRoleCCA56614": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiDeploymentFE1E728219e06fec5435ddb5c05d36225cdb3105": {
      "DependsOn": [
        "ApiANY29CC0E6B",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "ApiCD79AAA0",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiDeploymentStageprod95EFE650": {
      "DependsOn": [
        "ApiAccount6C17A443",
      ],
      "Properties": {
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "ApiLogGroup1717FE17",
              "Arn",
            ],
          },
          "Format": {
            "Fn::Join": [
              "",
              [
                "{"path":"$context.resourcePath","requestId":"$context.requestId","sourceIp":"$context.identity.sourceIp","method":"$context.httpMethod","authorizerLatency":"$context.authorizer.integrationLatency","integrationLatency":"$context.integrationLatency","responseLatency":"$context.responseLatency","authorizerStatus":"$context.authorizer.status","integrationStatus":"$context.integrationStatus","status":"$context.status","transactionId":"$context.authorizer.transactionId","tenantId":"$context.authorizer.tenantId","tier":"$context.authorizer.tier","role":"$context.authorizer.role","stackName":"",
                {
                  "Ref": "AWS::StackName",
                },
                ""}",
              ],
            ],
          },
        },
        "DeploymentId": {
          "Ref": "ApiDeploymentFE1E728219e06fec5435ddb5c05d36225cdb3105",
        },
        "RestApiId": {
          "Ref": "ApiCD79AAA0",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiLogGroup1717FE17": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/TenantIsolationPatterns/Basic/api",
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": {
      "DependsOn": [
        "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2926656cdb97b26d98f8b957b0d3f7326b458679745f2817e50333a21767350c.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
            "Arn",
          ],
        },
        "Runtime": {
          "Fn::FindInMap": [
            "LatestNodeRuntimeMap",
            {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "iam:CreateOpenIDConnectProvider",
                    "iam:DeleteOpenIDConnectProvider",
                    "iam:UpdateOpenIDConnectProviderThumbprint",
                    "iam:AddClientIDToOpenIDConnectProvider",
                    "iam:RemoveClientIDFromOpenIDConnectProvider",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IdentityLogGroup363C12C6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/TenantIsolationPatterns/Basic/pre-token-generation",
        "RetentionInDays": 1,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "IdentityMyOidcProvider7F02079C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ClientIDList": [
          {
            "Ref": "IdentityUserPoolUserPoolClient1035B963",
          },
        ],
        "CodeHash": "2926656cdb97b26d98f8b957b0d3f7326b458679745f2817e50333a21767350c",
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
            "Arn",
          ],
        },
        "Url": {
          "Fn::Join": [
            "",
            [
              "https://cognito-idp.",
              {
                "Ref": "AWS::Region",
              },
              ".amazonaws.com/",
              {
                "Ref": "IdentityUserPool96FE3B9B",
              },
            ],
          ],
        },
      },
      "Type": "Custom::AWSCDKOpenIdConnectProvider",
      "UpdateReplacePolicy": "Delete",
    },
    "IdentityPreTokenGenerationFnCEDC88ED": {
      "DependsOn": [
        "IdentityPreTokenGenerationFnServiceRole76C4CAD8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d713298c5895331a7a9c16f2dcf3b0b8de7bdae23542bd1f81398fbad74b9d13.zip",
        },
        "Handler": "index.handler",
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "IdentityLogGroup363C12C6",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "IdentityPreTokenGenerationFnServiceRole76C4CAD8",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "IdentityPreTokenGenerationFnServiceRole76C4CAD8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "IdentityUserPool96FE3B9B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AccountRecoverySetting": {
          "RecoveryMechanisms": [
            {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": true,
        },
        "AliasAttributes": [
          "email",
        ],
        "AutoVerifiedAttributes": [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "LambdaConfig": {
          "PreTokenGenerationConfig": {
            "LambdaArn": {
              "Fn::GetAtt": [
                "IdentityPreTokenGenerationFnCEDC88ED",
                "Arn",
              ],
            },
            "LambdaVersion": "V2_0",
          },
        },
        "Schema": [
          {
            "AttributeDataType": "String",
            "Mutable": false,
            "Name": "tenantId",
            "StringAttributeConstraints": {
              "MaxLength": "36",
              "MinLength": "1",
            },
          },
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolAddOns": {
          "AdvancedSecurityMode": "AUDIT",
        },
        "UserPoolName": "TenantIsolationPatterns-Basic",
        "VerificationMessageTemplate": {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "IdentityUserPoolCognitoDomainE237BB31": {
      "Properties": {
        "Domain": "tenantisolationpatterns-auth",
        "UserPoolId": {
          "Ref": "IdentityUserPool96FE3B9B",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "IdentityUserPoolPreTokenGenerationConfigCognito1B3039FD": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IdentityPreTokenGenerationFnCEDC88ED",
            "Arn",
          ],
        },
        "Principal": "cognito-idp.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "IdentityUserPool96FE3B9B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "IdentityUserPoolUserPoolClient1035B963": {
      "Properties": {
        "AccessTokenValidity": 1440,
        "AllowedOAuthFlows": [
          "implicit",
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": [
          "https://example.com",
        ],
        "ClientName": "TenantIsolationPatterns-Basic",
        "ExplicitAuthFlows": [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "IdTokenValidity": 1440,
        "ReadAttributes": [
          "custom:tenantId",
          "email",
        ],
        "RefreshTokenValidity": 4320,
        "SupportedIdentityProviders": [
          "COGNITO",
        ],
        "TokenValidityUnits": {
          "AccessToken": "minutes",
          "IdToken": "minutes",
          "RefreshToken": "minutes",
        },
        "UserPoolId": {
          "Ref": "IdentityUserPool96FE3B9B",
        },
        "WriteAttributes": [
          "custom:tenantId",
          "email",
        ],
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "Role1ABCC5F0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRoleWithWebIdentity",
                "sts:TagSession",
              ],
              "Condition": {
                "ForAllValues:StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "IdentityUserPoolUserPoolClient1035B963",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": {
                  "Ref": "IdentityMyOidcProvider7F02079C",
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
